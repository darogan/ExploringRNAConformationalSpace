%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Sun Apr 10 22:25:23 2016
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGGCUUCGUUAGGUGAGGCUCCUGUAUGGAGAUACGCUGCUGCCCAAAAAUGUCCAAAGACGCCAAUGGGUCAACAGAAAUCAUCGACAUAAGGUGAUUUUUAAUGCAGCUGGAUGCUUGUCCUAUGCCAUACAGUGCUAAAGCUCUACGAUUGAAGCCCA\
) def
/coor [
[110.56549835 528.28680420]
[110.27462769 513.28961182]
[109.98375702 498.29244995]
[109.69288635 483.29525757]
[109.40201569 468.29809570]
[109.11115265 453.30090332]
[108.82028198 438.30371094]
[108.52941132 423.30654907]
[96.89610291 416.70089722]
[90.00134277 405.11029053]
[89.74461365 391.51797485]
[96.30047607 379.48486328]
[108.04471588 372.21633911]
[108.04471588 357.21633911]
[108.04471588 342.21633911]
[100.30741119 329.48907471]
[108.04471588 315.68890381]
[108.04471588 300.68890381]
[108.04471588 285.68890381]
[108.04471588 270.68890381]
[107.46308136 255.70018005]
[106.15574646 240.75726318]
[104.70358276 225.82771301]
[103.25141907 210.89817810]
[101.79925537 195.96864319]
[100.34709930 181.03909302]
[98.89493561 166.10955811]
[97.44277191 151.18000793]
[95.99060822 136.25047302]
[83.50521088 132.52835083]
[73.12466431 124.65538025]
[66.17359924 113.63620758]
[63.53902817 100.87696075]
[65.55713654 88.00581360]
[71.97039795 76.66519928]
[81.96043396 68.30227661]
[77.38054657 54.01855850]
[72.80065155 39.73484039]
[68.22076416 25.45112228]
[63.64087296 11.16740322]
[37.98167038 3.05421495]
[30.20697975 -28.09704781]
[18.00369835 -36.81943130]
[5.80041838 -45.54180908]
[-6.40286303 -54.26419067]
[-18.60614395 -62.98657227]
[-32.57262421 -56.75081635]
[-47.68535614 -58.33263397]
[-59.89605331 -67.20761108]
[-65.98424530 -80.91126251]
[-64.40636444 -95.72260284]
[-76.60964966 -104.44498444]
[-88.81292725 -113.16736603]
[-101.01620483 -121.88974762]
[-117.38182068 -122.93795776]
[-124.41336823 -137.75312805]
[-114.87739563 -151.09469604]
[-98.58369446 -149.23797607]
[-92.29383087 -134.09303284]
[-80.09054565 -125.37064362]
[-67.88726807 -116.64826965]
[-55.68398285 -107.92588806]
[-42.18107224 -114.21372223]
[-27.24443817 -112.88973236]
[-14.89437580 -104.20973206]
[-8.50523758 -90.42294312]
[-9.88376331 -75.18985748]
[2.31951809 -66.46747589]
[14.52279949 -57.74509048]
[26.72607994 -49.02271271]
[38.92936325 -40.30033112]
[46.04867935 -42.65941620]
[41.33074570 -56.89813232]
[55.56954193 -61.61583328]
[60.28731918 -47.37758636]
[67.40663910 -49.73667145]
[71.98653412 -64.02039337]
[76.56642151 -78.30410767]
[81.14630890 -92.58782959]
[85.72620392 -106.87154388]
[90.30609131 -121.15526581]
[94.88597870 -135.43898010]
[99.46587372 -149.72270203]
[104.04576111 -164.00642395]
[108.62564850 -178.29013062]
[100.13511658 -191.42196655]
[102.12324524 -206.93264771]
[113.65131378 -217.49851990]
[129.27610779 -218.13070679]
[141.62008667 -208.53068542]
[144.85479736 -193.23132324]
[137.45291138 -179.45649719]
[122.90937042 -173.71025085]
[118.32947540 -159.42652893]
[113.74958801 -145.14280701]
[109.16970062 -130.85908508]
[104.58980560 -116.57537079]
[100.00991821 -102.29165649]
[95.43003082 -88.00793457]
[90.85013580 -73.72422028]
[86.27024841 -59.44050217]
[81.69036102 -45.15678406]
[92.06662750 -31.16804314]
[94.07057953 -15.23032188]
[88.47061920 -1.62500644]
[77.92459106 6.58751297]
[82.50447845 20.87123108]
[87.08437347 35.15494919]
[91.66426086 49.43866730]
[96.24414825 63.72238541]
[119.14669037 68.95848083]
[134.10447693 87.07498169]
[148.92433167 84.75720215]
[163.74417114 82.43942261]
[178.56402588 80.12164307]
[190.98190308 69.41049957]
[206.37576294 75.06388092]
[208.90974426 91.26607513]
[195.97708130 101.34964752]
[180.88180542 94.94149017]
[166.06196594 97.25926971]
[151.24211121 99.57704926]
[136.42225647 101.89483643]
[134.89682007 110.60110474]
[131.32176208 118.68473053]
[125.90704346 125.67093658]
[118.97070312 131.14938354]
[110.92015076 134.79830933]
[112.37231445 149.72784424]
[113.82447815 164.65739441]
[115.27663422 179.58692932]
[116.72879791 194.51647949]
[118.18096161 209.44601440]
[119.63312531 224.37554932]
[121.08528900 239.30509949]
[125.04787445 247.59115601]
[122.41797638 254.53779602]
[125.07401276 258.11376953]
[126.29896545 261.96411133]
[126.18595886 265.59558105]
[124.98166656 268.59817505]
[123.04471588 270.68890381]
[123.04471588 285.68890381]
[123.04471588 300.68890381]
[123.04471588 315.68890381]
[130.78201294 329.48907471]
[123.04471588 342.21633911]
[123.04471588 357.21633911]
[123.04471588 372.21633911]
[136.84933472 381.94949341]
[142.09777832 397.82965088]
[136.91586304 413.55706787]
[123.52658844 423.01568604]
[123.81745911 438.01284790]
[124.10832977 453.01004028]
[124.39920044 468.00720215]
[124.69007111 483.00439453]
[124.98094177 498.00158691]
[125.27181244 512.99877930]
[125.56267548 527.99591064]
[128.12654114 547.20727539]
] def
/pairs [
[1 160]
[2 159]
[3 158]
[4 157]
[5 156]
[6 155]
[7 154]
[8 153]
[13 149]
[14 148]
[15 147]
[17 145]
[18 144]
[19 143]
[20 142]
[21 137]
[22 135]
[23 134]
[24 133]
[25 132]
[26 131]
[27 130]
[28 129]
[29 128]
[36 110]
[37 109]
[38 108]
[39 107]
[40 106]
[42 71]
[43 70]
[44 69]
[45 68]
[46 67]
[51 62]
[52 61]
[53 60]
[54 59]
[76 102]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[112 123]
[113 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
